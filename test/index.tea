
require "../lib/tea.js";

argv = process.argv.slice();
while argv[0] && Fp.baseName( argv[0] ) != Fp.baseName(__filename):
	argv.shift();
if argv.length:
	argv.shift();
else:
	argv = process.argv.slice();

source_file = {};
for i, file -> Fp.scanFile(__dirname+'/source'):
	source_file[ Fp.name(file) ] = file;

if argv[0]:
	param = argv[0];
	if m = param.match(/src\/(\w+)\//):
		file_keys = Object.keys(source_file);
		target = m[1];
		test_map = {
			'preprocess' : ['pre-p']
			'string': ['string']
			'settings': [ 'pre-p'||file_keys[ Math.floor(Math.random()*1000)%file_keys.length ] ]
		};
		if 0 && test_map[ target ]:
			temp = {};
			for name => test_map[ target ]:
				temp[name] = source_file[name];
			source_file = temp;
	else if source_file[param]:
		temp = {};
		temp[param] = source_file[param];
		source_file = temp;

source_file = {'require': source_file['try']}

for name, file in source_file:
	runTest(file);
	

function runTest(file, text):
	print "<-->";
	console.log('[Test source file] '+file);
	ctx = Tea.context(file, text);
	print ctx.source;
	// print '<-->'
	print ctx.AST;
	// print ctx.CAST;
	print ctx.scope;
	print.bd( ctx.output() );
	// print '<-->';
	// print ctx.scope;

