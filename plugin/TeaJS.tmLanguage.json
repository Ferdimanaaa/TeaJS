{
	"patterns" : [{"match" : "\\'{3,}|\\\"{3,}|`{1,}", "name" : "storage.type.template"}, {"match" : "\\$\\{.*?\\}", "name" : "constant.character.escape.js"}, {
		"begin" : "#(include)",
		"end" : ";|(?<!,)\\n",
		"patterns" : [{"match" : "(?:(?:[^,;\\s\\\\]+(?:\\\\ )*)+)", "name" : "entity.name.function"}],
		"captures" : {
			"1" : {"name" : "keyword.prep"},
			"2" : {"name" : "entity.name.function"}
		}
	}, {
		"captures" : {
			"1" : {"name" : "keyword.prep"},
			"2" : {"name" : "entity.name.function"},
			"3" : {"name" : "keyword.prep"},
			"4" : {"name" : "entity.name.function"},
			"5" : {"name" : "variable.parameter"},
			"6" : {"name" : "keyword.prep"},
			"7" : {"name" : "entity.name.function"},
			"8" : {"name" : "variable.parameter"},
			"9" : {"name" : "keyword.prep"},
			"10" : {"name" : "comment"},
			"11" : {"name" : "keyword.prep"},
			"12" : {"name" : "keyword.prep"},
			"13" : {"name" : "entity.name.function"}
		},
		"match" : "#(token)\\ +([\\$a-zA-Z_]\\w*(?:\\s*,\\s*[\\$a-zA-Z_]\\w*)*)|#(exp|stat)\\ +([\\$a-zA-Z_]\\w*)\\ +(\\/[^\\/]+\\/)|#(define)\\ +([\\$a-zA-Z_]\\w*)(?:\\(((?:\\(.*?\\)|[^\\)]*)*)\\))?|#(test|end\\w*)(.*$)|#(run|endrun|line|token|define|exp|stat|argv|undef|if\\w*|el\\w+)\\b|#(include)\\s*((?:(?:[^,;\\s\\\\]+(?:\\\\ )*)+)(?:\\s*,\\s*(?:(?:[^,;\\s\\\\]+(?:\\\\ )*)+))*)",
		"name" : "undefined"
	}, {
		"captures" : {
			"1" : {"name" : "comment"},
			"2" : {"name" : "storage"},
			"3" : {"name" : "constant.character"},
			"4" : {"name" : "message"}
		},
		"match" : "(#\\W.*$)|(#)(\\w+)(.*$)",
		"name" : "undefined"
	}, {"match" : "\\/\\/.*?$", "name" : "comment.line"}, {"name" : "comment", "begin" : "\\/\\*", "end" : "\\*\\/"}, {
		"name" : "string.quoted.single.js",
		"begin" : "'",
		"end" : "'",
		"patterns" : [{
			"captures" : {
				"1" : {"name" : "storage"}
			},
			"match" : "(err:\\d+)|\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)",
			"name" : "constant.character.escape.js"
		}]
	}, {
		"name" : "string.quoted.double.js",
		"begin" : "\\\"",
		"end" : "\\\"",
		"patterns" : [{
			"captures" : {
				"1" : {"name" : "storage"}
			},
			"match" : "(err:\\d+)|\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)|\\$\\{.*?\\}",
			"name" : "constant.character.escape.js"
		}]
	}, {
		"captures" : {
			"1" : {"name" : "constant.numeric"}
		},
		"match" : "(?<![a-zA-Z])(0[xX][0-9a-fA-F]+|(?:\\.\\d+|\\d+(?:\\.\\d+)?)(?:e\\-?\\d+)?)",
		"name" : "undefined"
	}, {
		"name" : "string",
		"begin" : "(?<=[=(:]|^|\\&\\&|\\|\\||\\!|\\,|return|if|else|while|switch|\\<\\-|\\-\\>)\\s*(\\/)(?![\\/\\*\\+\\{\\}\\?])",
		"end" : "(\\/)[igm]*",
		"patterns" : [{
			"captures" : {
				"1" : {"name" : "storage"}
			},
			"match" : "(\\|)|\\\\.",
			"name" : "constant.character"
		}]
	}, {
		"captures" : {
			"1" : {"name" : "storage"},
			"2" : {"name" : "entity.name.function"},
			"3" : {"name" : "support.function"},
			"4" : {"name" : "storage.type"}
		},
		"match" : "\\.(?:(prototype|constructor|__proto__|length|\\:\\:)|(?:([\\w\\$]+)(?=\\s*\\=\\s*function))|(length|warn|info|log|error|time|timeEnd|assert)|([\\w\\$]+))\\b|(?<=\\w|\\])(\\[)([\\$a-zA-Z_]\\w*)(\\])|",
		"name" : "undefined"
	}, {
		"captures" : {
			"1" : {"name" : "constant.language"},
			"2" : {"name" : "storage.type"},
			"3" : {"name" : "keyword.control"},
			"4" : {"name" : "constant.character"}
		},
		"match" : "(?:(?:[,;]\\s*|^\\s*)?)\\b(?:(case|default)|(boolean|class|var|let|const|export|void|Array|Object|String|Function)|(break|case|catch|continue|default|do|else|finally|for|goto|if|import|package|return|switch|throw|delete|try|while|require|super|\\*init|\\*proto)|(true|false|null|Infinity|NaN|undefined))\\b",
		"name" : "undefined"
	}, {
		"captures" : {
			"1" : {"name" : "storage.type"},
			"2" : {"name" : "entity.name.function"},
			"3" : {"name" : "variable.parameter"}
		},
		"match" : "(?:(?:(?:[,;]\\s*|^\\s*)?)(function)|(?:[,;]\\s*|^\\s*)([\\$a-zA-Z_]\\w*))\\s*(?:\\(((?:\\(.*?\\)|[^\\)]*)*)\\))\\s*[:\\{]",
		"name" : "undefined"
	}, {
		"captures" : {
			"1" : {"name" : "storage.type"},
			"2" : {"name" : "storage"},
			"3" : {"name" : "entity.name.function"},
			"4" : {"name" : "variable.parameter"}
		},
		"match" : "(?:(?:[,;]\\s*|^\\s*)?)\\b(?:(function)|(get|set|static))\\ +([\\$a-zA-Z_]\\w*)(?:\\(((?:\\(.*?\\)|[^\\)]*)*)\\))?\\s*[:\\{]",
		"name" : "undefined"
	}, {
		"captures" : {
			"1" : {"name" : "storage.type"},
			"2" : {"name" : "variable.parameter"},
			"3" : {"name" : "storage.type"}
		},
		"match" : "(?:(?:[,;]\\s*|^\\s*)|[\\=\\:]\\s*)(\\(((?:\\(.*?\\)|[^\\)]*)*)\\))\\s*(->)",
		"name" : "function.js"
	}, {
		"captures" : {
			"1" : {"name" : "storage"},
			"2" : {"name" : "storage.type"},
			"3" : {"name" : "constant.character"}
		},
		"match" : "(?:(?:[,;]\\s*|^\\s*)?)\\b(?:(as|in|of|not\\ is|not|is|and|or|typeof|new|instanceof|extends)|(exports)|(global|console|eval))\\b",
		"name" : "undefined"
	}, {
		"captures" : {
			"1" : {"name" : "constant.character"},
			"2" : {"name" : "storage.type"}
		},
		"match" : "\\b(?:(__[\\$a-zA-Z_]\\w*)|([A-Z][\\$a-zA-Z_]\\w*))\\b",
		"name" : "undefined"
	}, {
		"captures" : {
			"1" : {"name" : "storage"},
			"2" : {"name" : "storage.type"},
			"3" : {"name" : "storage"}
		},
		"match" : "\\(\\s*\\)",
		"name" : "comment"
	}, {
		"captures" : {
			"1" : {"name" : "storage"},
			"2" : {"name" : "storage.type"},
			"3" : {"name" : "storage"}
		},
		"match" : "(\\:{2}|\\.\\.)|([\\<\\>]\\=+|\\=+[\\<\\>\\?]+|[\\?\\|]\\=+|\\|\\||\\&\\&|\\?|\\<\\-|\\-\\>|\\-\\-\\>)|(\\={2}|[^\\w\\s\\\"'\\#\\{\\}\\;\\,\\.\\[\\]\\(\\)\\:]+)",
		"name" : "undefined"
	}, {
		"captures" : {
			"1" : {"name" : "storage"},
			"2" : {"name" : "storage.type"}
		},
		"match" : "(?:[,;]\\s*|^\\s*)([\\$a-zA-Z_]\\w*) +(?!as|in|of|not\\ is|not|is|and|or|typeof|new|instanceof|extends|break|case|catch|continue|default|do|else|finally|for|goto|if|import|package|return|switch|throw|delete|try|while|require|super|[^\\w\\\"\\'\\[])|([\\$a-zA-Z_]\\w*(?=\\())",
		"name" : "undefined"
	}, {
		"captures" : {
			"1" : {"name" : "entity.name.function"}
		},
		"match" : "(?<=[\\,\\{]|^)\\s*\\b([\\$a-zA-Z_]\\w*)(?=\\s*\\:)",
		"name" : "undefined"
	}, {
		"captures" : {
			"1" : {"name" : "storage"},
			"2" : {"name" : "variable.parameter"},
			"3" : {"name" : "storage"}
		},
		"match" : "(\\[)\\s*([\\$a-zA-Z_]\\w*(?:\\s*,\\s*[\\$a-zA-Z_]\\w*)*)\\s*(\\])\\s*(?=\\=)",
		"name" : "undefined"
	}],
	"fileTypes" : ["tea"],
	"firstLineMatch" : "^#!\/usr\/bin\/env node",
	"foldingStartMarker" : "",
	"foldingStopMarker" : "",
	"keyEquivalent" : "^~T",
	"uuid" : "93E017CC-6F27-11D9-90EB-000D93589AF6",
	"comment" : "TeaJS Syntax: version 0.1",
	"name" : "TeaJS",
	"scopeName" : "source.js"
}