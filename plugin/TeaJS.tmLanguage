<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>TeaJS Syntax: version 0.1</string>
	<key>fileTypes</key>
	<array>
		<string>tea</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!/usr/bin/env node</string>
	<key>foldingStartMarker</key>
	<string></string>
	<key>foldingStopMarker</key>
	<string></string>
	<key>keyEquivalent</key>
	<string>^~T</string>
	<key>name</key>
	<string>TeaJS</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>\'{3,}|\"{3,}|`{1,}</string>
			<key>name</key>
			<string>storage.type.template</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\$\{.*?\}</string>
			<key>name</key>
			<string>constant.character.escape.js</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>#(include)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.prep</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
			</dict>
			<key>end</key>
			<string>;|(?&lt;!,)\n</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?:(?:[^,;\s\\]+(?:\\ )*)+)</string>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.prep</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>comment</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>keyword.prep</string>
				</dict>
				<key>12</key>
				<dict>
					<key>name</key>
					<string>keyword.prep</string>
				</dict>
				<key>13</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.prep</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>keyword.prep</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>keyword.prep</string>
				</dict>
			</dict>
			<key>match</key>
			<string>#(token)\ +([\$a-zA-Z_]\w*(?:\s*,\s*[\$a-zA-Z_]\w*)*)|#(exp|stat)\ +([\$a-zA-Z_]\w*)\ +(\/[^\/]+\/)|#(define)\ +([\$a-zA-Z_]\w*)(?:\(((?:\(.*?\)|[^\)]*)*)\))?|#(test|end\w*)(.*$)|#(run|endrun|line|token|define|exp|stat|argv|undef|if\w*|el\w+)\b|#(include)\s*((?:(?:[^,;\s\\]+(?:\\ )*)+)(?:\s*,\s*(?:(?:[^,;\s\\]+(?:\\ )*)+))*)</string>
			<key>name</key>
			<string>undefined</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>comment</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>message</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#\W.*$)|(#)(\w+)(.*$)</string>
			<key>name</key>
			<string>undefined</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\/\/.*?$</string>
			<key>name</key>
			<string>comment.line</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\/\*</string>
			<key>end</key>
			<string>\*\/</string>
			<key>name</key>
			<string>comment</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>end</key>
			<string>'</string>
			<key>name</key>
			<string>string.quoted.single.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(err:\d+)|\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
					<key>name</key>
					<string>constant.character.escape.js</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\"</string>
			<key>end</key>
			<string>\"</string>
			<key>name</key>
			<string>string.quoted.double.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(err:\d+)|\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)|\$\{.*?\}</string>
					<key>name</key>
					<string>constant.character.escape.js</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.numeric</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;![a-zA-Z])(0[xX][0-9a-fA-F]+|(?:\.\d+|\d+(?:\.\d+)?)(?:e\-?\d+)?)</string>
			<key>name</key>
			<string>undefined</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=[=(:]|^|\&amp;\&amp;|\|\||\!|\,|return|if|else|while|switch|\&lt;\-|\-\&gt;)\s*(\/)(?![\/\*\+\{\}\?])</string>
			<key>end</key>
			<string>(\/)[igm]*</string>
			<key>name</key>
			<string>string</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\|)|\\.</string>
					<key>name</key>
					<string>constant.character</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.function</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\.(?:(prototype|constructor|__proto__|length|\:\:)|(?:([\w\$]+)(?=\s*\=\s*function))|(length|warn|info|log|error|time|timeEnd|assert)|([\w\$]+))\b|(?&lt;=\w|\])(\[)([\$a-zA-Z_]\w*)(\])|</string>
			<key>name</key>
			<string>undefined</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.character</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:(?:[,;]\s*|^\s*)?)\b(?:(case|default)|(boolean|class|var|let|const|export|void|Array|Object|String|Function)|(break|case|catch|continue|default|do|else|finally|for|goto|if|import|package|return|switch|throw|delete|try|while|require|super|\*init|\*proto)|(true|false|null|Infinity|NaN|undefined))\b</string>
			<key>name</key>
			<string>undefined</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:(?:(?:[,;]\s*|^\s*)?)(function)|(?:[,;]\s*|^\s*)([\$a-zA-Z_]\w*))\s*(?:\(((?:\(.*?\)|[^\)]*)*)\))\s*[:\{]</string>
			<key>name</key>
			<string>undefined</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:(?:[,;]\s*|^\s*)?)\b(?:(function)|(get|set|static))\ +([\$a-zA-Z_]\w*)(?:\(((?:\(.*?\)|[^\)]*)*)\))?\s*[:\{]</string>
			<key>name</key>
			<string>undefined</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:(?:[,;]\s*|^\s*)|[\=\:]\s*)(\(((?:\(.*?\)|[^\)]*)*)\))\s*(-&gt;)</string>
			<key>name</key>
			<string>function.js</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:(?:[,;]\s*|^\s*)?)\b(?:(as|in|of|not\ is|not|is|and|or|typeof|new|instanceof|extends)|(exports)|(global|console|eval))\b</string>
			<key>name</key>
			<string>undefined</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.character</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(?:(__[\$a-zA-Z_]\w*)|([A-Z][\$a-zA-Z_]\w*))\b</string>
			<key>name</key>
			<string>undefined</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\(\s*\)</string>
			<key>name</key>
			<string>comment</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\:{2}|\.\.)|([\&lt;\&gt;]\=+|\=+[\&lt;\&gt;\?]+|[\?\|]\=+|\|\||\&amp;\&amp;|\?|\&lt;\-|\-\&gt;|\-\-\&gt;)|(\={2}|[^\w\s\"'\#\{\}\;\,\.\[\]\(\)\:]+)</string>
			<key>name</key>
			<string>undefined</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:[,;]\s*|^\s*)([\$a-zA-Z_]\w*) +(?!as|in|of|not\ is|not|is|and|or|typeof|new|instanceof|extends|break|case|catch|continue|default|do|else|finally|for|goto|if|import|package|return|switch|throw|delete|try|while|require|super|[^\w\"\'\[])|([\$a-zA-Z_]\w*(?=\())</string>
			<key>name</key>
			<string>undefined</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=[\,\{]|^)\s*\b([\$a-zA-Z_]\w*)(?=\s*\:)</string>
			<key>name</key>
			<string>undefined</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\[)\s*([\$a-zA-Z_]\w*(?:\s*,\s*[\$a-zA-Z_]\w*)*)\s*(\])\s*(?=\=)</string>
			<key>name</key>
			<string>undefined</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.js</string>
	<key>uuid</key>
	<string>93E017CC-6F27-11D9-90EB-000D93589AF6</string>
</dict>
</plist>
