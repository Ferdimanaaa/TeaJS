var Echo = require "./echo.js";
class Writer:

	constructor(reader, type):
		@.length = 0
		@.type   = type && type.type || type;
		@.reader = reader;
		@.iswriter = true

	get lastText:
		var last = @;
		while true:
			if last.istoken:
				return last.text;
			if last as 'string' || last as 'number':
				return last;
			if last = last[last.length-1]:
				continue;
			return null;
	
	insert (pos):
		var argus = [pos, 0];
		for i=1, item => arguments:
			if item.istoken || item.isnode:
				item = @.reader.read(item);
			if item:
				if isArray(item):
					argus.push.apply( argus, item );
				else:
					argus.push( item );
		Array.prototype.splice.apply(@, argus);
		return @;

	add ():
		for i, item => arguments:
			if item:
				@[@.length++] = item;
		return @;

	read (test_patt):
		if test_patt as 'string' && /#/.test(test_patt):
			@.reader.patt(test_patt, arguments[1], @);
		else:
			for i, item => arguments:
				if !item:
					continue;
				if item.istoken || item.isnode:
					item = @.reader.read(item);
				else if isArray(item):
					@.read.apply(@, item);
					continue;
				if item:
					@[@.length++] = item;
		return @;

	body (left, right, not_indent):
		var body = @.reader.new('Body');
		if left:
			@.read(left);
		@.add(body);
		if right:
			@.read(right);
		body.notIndent = not_indent;
		return body;

	get text:
		return @.toText();

	toText( ):
		var text = Echo.toText(@);
		return text;

module.exports = Writer;