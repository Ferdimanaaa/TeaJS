
Token    = require "../core/token";
Node     = require "../core/node";
Grammar  = require "../core/grammar";
Scope    = require "../core/scope";
Standard = require "../core/standard";

for name, value in require("./token.js"):
	names   = name.split(' ').filter( ($) => $ );
	values  = value.replace(/([^\n])\s*\n+\s*/g,  '$1  ').split('  ').filter( ($) => $ );
	Token.define( names, values );

for name, value in require("./syntax/"):
	mode = null;
	if value as 'string':
		value = value.replace(/\n\s*/g,  ' ');
	if /:debug$/.test(name):
		mode = 'debug';
		name = name.slice(0, -6);
	Grammar.define( name, value, mode );

for name, value in require("./node.js"):
	names   = name.split(' ').filter( ($) => $ );
	values  = value.replace(/\s*\n+\s*/g,  '  ').split('  ').filter( ($) => $ );
	Node.define( names, values );

for value => require("./scope.js"):
	Scope.defineScope( value );

Standard.define('es5', require("./standards/es5") );