
var Node = require "./node.js";
var Scope = require "./scope.js";
var Parser = require "./parser.js";
var SyntaxReg = require "./regexp.js";

export token = require "./token.js";

export location = require "./location.js";

export source = require "./source.js";

export parse(src, ctx):
	var ast = new Node('Root');
	ast.context = null;
	ast.source = src;
	ast.fileName = src.fileName;
	ast.filePath = Path.dirname( ast.fileName );
	src.index = 0;
	src.refresh();
	var old_por = src.context;
	if ctx:
		src.context = ctx;
	ast.add( Parser.Node( src ) );
	Scope.parse( ast );
	ast.context = src.context;
	src.context = old_por;
	return ast;

export regexp    = SyntaxReg.compile;

export match     = function(stx_re, src, opt):
	if stx_re as 'string':
		if stx_re in Parser:
			return Parser[stx_re](src, opt);
		stx_re = Syntax.regexp(stx_re);
	return SyntaxReg.match(stx_re, src)

export matchNode = SyntaxReg.matchNode;