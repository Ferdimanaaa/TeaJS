module.exports = {
	"Object": 'CONST  IDENTIFIER  NUMBER  STRING  REGEXP  COMMENT  JsonExpr  ArrayExpr',
	"Variable": 'VariableExpr',
	"Access": 'Variable  AccessExpr  SuperExpr  ThisExpr  SliceExpr',
	"Unary": 'UnaryExpr  PrefixExpr  PostfixExpr  NotExpr  NewExpr',
	"Value": 'Object  Access  Unary  RequireExpr  CompelExpr  CallExpr',
	"Operate": 'CompareExpr  ComputeExpr  LogicExpr',
	"Assign": "AssignExpr  ArrayAssignExpr  JsonAssignExpr",
	"Binary": 'Value  Operate  Assign',
	"Ternary": 'TernaryExpr',
	"Comma": 'CommaExpr ArgusExpr ArgusStam ParamsExpr JsonExpr ArrayExpr JsonPatt ArrayExpr',
	"Expression": 'Binary  Ternary  FunctionExpr  ClassExpr  CommaExpr',
	"IfStam": 'IfPatt  ElseIfPatt  ElsePatt',
	"TryStam": 'TryPatt  CatchPatt  FinallyPatt',
	"Control": 'IfStam  WhileStam  DoWhileStam  WithStam  ForStam  SwitchStam  CaseStam  DefaultStam  TryStam',
	"Statement": 'Control  VarStam  LetStam  ConstStam  ClassDecl  ReturnStam  BreakStam  ContinueStam  DebuggerStam  ThrowStam  LabelStam  LinkStam  SeleteStam',
	"Declaration": 'FunctionDecl  MethodDecl  GetterDecl  SetterDecl  StaticDecl  ProtoDecl  PropertyDecl  ConstructorDecl  ExportDecl',
	"Block": 'BlockStam  BlockNode',
	"NodeBlock": 'Block  Root',
	"Function": 'FunctionExpr  FunctionDecl  GetterDecl  SetterDecl  MethodDecl  PackageExpr  ArrowExpr  ConstructorDecl',
	"Let": 'IfPatt  ElseIfPatt  ElsePatt  WhileStam  DoWhileStam  WithStam  ForStam  SwitchStam',
	"Class": 'ClassExpr  ClassDecl',
	"Scope": 'Json  Let  Class  Function  Root'};